{"version":3,"file":"static/js/347.d9cc971f.chunk.js","mappings":"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","sources":["containers/Main/Analytics/WordGraph.js","containers/Main/Analytics/index.js"],"sourcesContent":["import React, { useRef, useEffect } from \"react\";\nimport * as d3 from \"d3\";\n\nconst WordGraph = ({ words }) => {\n  const ref = useRef();\n\n  useEffect(() => {\n    const svg = d3.select(ref.current);\n    svg.selectAll(\"*\").remove(); // Clear SVG content before redrawing\n\n    const { width, height } = ref.current.getBoundingClientRect();\n\n    // Create a scale for the font size\n    const fontSizeScale = d3\n      .scaleSqrt()\n      .domain([0, d3.max(words, (d) => d.weight)])\n      .range([12, 40]);\n\n    // Initialize the nodes for the simulation\n    const nodes = words.map((word) => ({\n      ...word,\n      x: Math.random() * width,\n      y: Math.random() * height,\n      radius: fontSizeScale(word.weight),\n    }));\n\n    // Create the force simulation\n    const simulation = d3\n      .forceSimulation(nodes)\n      .force(\"charge\", d3.forceManyBody().strength(5))\n      .force(\"center\", d3.forceCenter(width / 2, height / 2))\n      .force(\n        \"collision\",\n        d3.forceCollide().radius((d) => d.radius)\n      )\n      .on(\"tick\", ticked);\n\n    function ticked() {\n      const u = svg\n        .selectAll(\"text\")\n        .data(nodes)\n        .join(\"text\")\n        .text((d) => d.text)\n        .style(\"font-size\", (d) => `${fontSizeScale(d.weight)}px`)\n        .attr(\"x\", (d) => d.x)\n        .attr(\"y\", (d) => d.y)\n        .attr(\"fill\", \"white\")\n        .attr(\"text-anchor\", \"middle\")\n        .attr(\"dominant-baseline\", \"central\");\n    }\n\n    return () => {\n      simulation.stop(); // Stop simulation when component unmounts\n    };\n  }, [words]); // Redraw when words change\n\n  return <svg ref={ref} style={{ width: \"100%\", height: \"100%\" }}></svg>;\n};\n\nexport default WordGraph;\n","import React from \"react\";\nimport {\n  BarChart,\n  LineChart,\n  Gauge,\n  PieChart,\n  gaugeClasses,\n} from \"@mui/x-charts\";\nimport {\n  Box,\n  Typography,\n  Grid,\n  Divider,\n  Stack,\n  CssBaseline,\n  ThemeProvider,\n  createTheme,\n} from \"@mui/material\";\nimport WordGraph from \"./WordGraph\";\n\nconst Analytics = () => {\n  const theme = createTheme({\n    palette: {\n      background: {\n        default: \"#000\", // Black background\n      },\n      text: {\n        primary: \"#fff\", // White text\n      },\n    },\n    components: {\n      MuiPaper: {\n        styleOverrides: {\n          root: {\n            backgroundColor: \"#000\", // Black background for Paper components\n          },\n        },\n      },\n    },\n  });\n\n  const gaugesData = [\n    { value: 46, label: \"ROCE\", description: \"46%\" },\n    {\n      value: 73,\n      label: \"Trade Accuracy\",\n      description: \"73%\",\n      startAngle: -90,\n      endAngle: 90,\n    },\n  ];\n\n  const barData = [24, 13, 98, 39, 48, 38, 43];\n  const profitLossData = [4000, 3000, 2000, 2780, -1890, 2390, 3490];\n  const xLabels = [\n    \"TaTa\",\n    \"Krsnaa\",\n    \"Reliance\",\n    \"Mahindra\",\n    \"Bajaj\",\n    \"E2E\",\n    \"MMForg\",\n  ];\n\n  const ledgerDataRaw = localStorage.getItem(\"ledgerData\");\n  const ledgerData = JSON.parse(JSON.parse(ledgerDataRaw));\n\n  // Calculate the profit or loss as a float for each item in the ledger data\n  const profitLossArray = ledgerData.map((item) =>\n    parseFloat(item.profit_loss)\n  );\n  const stockNamesArray = ledgerData.map((stock) => stock.stock_name);\n\n  // Assume initial seed capital\n  let fundValue = 100000000; // 1 crore\n  const fundValuesArray = [];\n\n  // Traverse through each profit or loss value to update the fund value\n  profitLossArray.forEach((profitLoss) => {\n    fundValue += profitLoss; // Update fund value based on profit or loss\n    fundValuesArray.push(fundValue); // Append updated fund value to array\n  });\n\n  // Map and log sell dates to confirm their format directly\n  const sellDates = ledgerData.map((entry) => entry.sell_date);\n  const daysHeldArray = ledgerData.map((stock) => {\n    const buyDate = new Date(stock.buy_date);\n    const sellDate = new Date(stock.sell_date);\n\n    // Calculate difference in time in milliseconds\n    const timeDiff = sellDate - buyDate;\n\n    // Convert time difference from milliseconds to days\n    return timeDiff / (1000 * 3600 * 24); // Converts milliseconds to days\n  });\n\n  const lineSeriesData = {\n    totalFundValue: fundValuesArray,\n    profitLoss: profitLossArray,\n  };\n\n  const pieChartData = [\n    { id: 0, value: 10, label: \"Mid Cap\" },\n    { id: 1, value: 15, label: \"Large Cap\" },\n    { id: 2, value: 20, label: \"Small Cap\" },\n  ];\n\n  const WordGraphData = [\n    { text: \"Breakout\", weight: Math.floor(Math.random() * 50) + 1 },\n    { text: \"Pullback\", weight: Math.floor(Math.random() * 50) + 1 },\n    { text: \"Retest\", weight: Math.floor(Math.random() * 50) + 1 },\n    { text: \"Gap Up\", weight: Math.floor(Math.random() * 50) + 1 },\n    { text: \"Momentum\", weight: Math.floor(Math.random() * 50) + 1 },\n    { text: \"Reversal\", weight: Math.floor(Math.random() * 50) + 1 },\n    { text: \"Support\", weight: Math.floor(Math.random() * 50) + 1 },\n    { text: \"Resistance\", weight: Math.floor(Math.random() * 50) + 1 },\n    { text: \"Overbought\", weight: Math.floor(Math.random() * 50) + 1 },\n    { text: \"Oversold\", weight: Math.floor(Math.random() * 50) + 1 },\n    { text: \"Trend Line\", weight: Math.floor(Math.random() * 50) + 1 },\n    { text: \"Volume Spike\", weight: Math.floor(Math.random() * 50) + 1 },\n    { text: \"Candlestick\", weight: Math.floor(Math.random() * 50) + 1 },\n    { text: \"Scalping\", weight: Math.floor(Math.random() * 50) + 1 },\n    { text: \"Range Trading\", weight: Math.floor(Math.random() * 50) + 1 },\n  ];\n\n  return (\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n      <div style={{ backgroundColor: \"#000\" }}>\n        <Grid container spacing={2}>\n          {/* Top Row Charts */}\n          <Grid item xs={12} md={6}>\n            <Box\n              sx={{\n                display: \"flex\",\n                justifyContent: \"center\",\n                alignItems: \"center\",\n                height: \"100%\",\n                backgroundColor: \"#56585c\",\n              }}\n            >\n              <BarChart\n                width={600}\n                height={300}\n                series={[\n                  {\n                    data: daysHeldArray,\n                    label: \"Number of Days Hold\",\n                    yAxisKey: \"leftAxisId\",\n                    color: \"#db5432\",\n                  },\n                  {\n                    data: profitLossArray,\n                    label: \"Profit/Loss\",\n                    yAxisKey: \"rightAxisId\",\n                    color: \"#77cc2d\",\n                  },\n                ]}\n                xAxis={[{ data: stockNamesArray, scaleType: \"band\" }]}\n                yAxis={[{ id: \"leftAxisId\" }, { id: \"rightAxisId\" }]}\n              />\n            </Box>\n            <Typography\n              variant=\"h6\"\n              style={{\n                background:\n                  \"linear-gradient(90deg, rgba(0,255,0,1) 0%, rgba(255,0,0,1) 100%)\",\n                WebkitBackgroundClip: \"text\",\n                WebkitTextFillColor: \"transparent\",\n                MozBackgroundClip: \"text\",\n                MozTextFillColor: \"transparent\",\n                backgroundClip: \"text\",\n                color: \"transparent\",\n                textAlign: \"center\",\n                fontWeight: \"bold\",\n              }}\n            >\n              Investment Duration vs. Profit/Loss\n            </Typography>\n          </Grid>\n          <Grid item xs={12} md={6}>\n            <Box\n              sx={{\n                display: \"flex\",\n                justifyContent: \"center\",\n                alignItems: \"center\",\n                height: \"100%\",\n                backgroundColor: \"#56585c\",\n              }}\n            >\n              <LineChart\n                width={700}\n                height={300}\n                series={[\n                  {\n                    data: lineSeriesData.totalFundValue,\n                    label: \"Total Fund Value\",\n                    color: \"#db5432\",\n                  },\n                  {\n                    data: lineSeriesData.profitLoss,\n                    label: \"Profit/Loss\",\n                    color: \"#77cc2d\",\n                  },\n                ]}\n                xAxis={[\n                  {\n                    data: sellDates,\n                    scaleType: \"point\",\n                  },\n                ]}\n              />\n            </Box>\n            <Typography\n              variant=\"h6\"\n              style={{\n                background:\n                  \"linear-gradient(90deg, rgba(0,255,0,1) 0%, rgba(255,0,0,1) 100%)\",\n                WebkitBackgroundClip: \"text\",\n                WebkitTextFillColor: \"transparent\",\n                MozBackgroundClip: \"text\",\n                MozTextFillColor: \"transparent\",\n                backgroundClip: \"text\",\n                color: \"transparent\",\n                textAlign: \"center\",\n                fontWeight: \"bold\",\n              }}\n            >\n              Fund Value and Profit/Loss Over Time\n            </Typography>\n          </Grid>\n          .\n          <Grid item xs={12}>\n            <Divider style={{ backgroundColor: \"#000\" }} />\n          </Grid>\n          {/* Bottom Row Charts */}\n          <Grid item xs={12} md={6}>\n            <Box\n              sx={{\n                display: \"flex\",\n                justifyContent: \"center\",\n                alignItems: \"center\",\n                height: \"100%\",\n                backgroundColor: \"#56585c\",\n              }}\n            >\n              <Stack direction=\"row\" spacing={2} alignItems=\"center\">\n                {gaugesData.map((gauge, index) => (\n                  <Box key={index} sx={{ width: 300, textAlign: \"center\" }}>\n                    <Gauge\n                      width={300}\n                      height={300}\n                      value={gauge.value}\n                      startAngle={gauge.startAngle || 0}\n                      endAngle={gauge.endAngle || 360}\n                      sx={(theme) => ({\n                        [`& .${gaugeClasses.valueText}`]: {\n                          fontSize: 40,\n                        },\n                        [`& .${gaugeClasses.valueArc}`]: {\n                          fill: \"#52b202\",\n                        },\n                        [`& .${gaugeClasses.referenceArc}`]: {\n                          fill: theme.palette.text.disabled,\n                        },\n                      })}\n                    />\n                    <Typography variant=\"h6\">{gauge.label}</Typography>\n                    <Typography variant=\"caption\">\n                      {gauge.description}\n                    </Typography>\n                  </Box>\n                ))}\n              </Stack>\n            </Box>\n            <Typography\n              variant=\"h6\"\n              style={{\n                background:\n                  \"linear-gradient(90deg, rgba(0,255,0,1) 0%, rgba(255,0,0,1) 100%)\",\n                WebkitBackgroundClip: \"text\",\n                WebkitTextFillColor: \"transparent\",\n                MozBackgroundClip: \"text\",\n                MozTextFillColor: \"transparent\",\n                backgroundClip: \"text\",\n                color: \"transparent\",\n                textAlign: \"center\",\n                fontWeight: \"bold\",\n              }}\n            >\n              Key Performance Indicators\n            </Typography>\n          </Grid>\n          <Grid item xs={12} md={6}>\n            <Box\n              sx={{\n                display: \"flex\",\n                justifyContent: \"center\",\n                alignItems: \"center\",\n                height: \"100%\",\n                backgroundColor: \"#56585c\",\n              }}\n            >\n              {/* <PieChart\n                series={[{ data: pieChartData }]}\n                width={500}\n                height={300}\n              /> */}\n              <WordGraph words={WordGraphData} />\n            </Box>\n            <Typography\n              variant=\"h6\"\n              style={{\n                background:\n                  \"linear-gradient(90deg, rgba(0,255,0,1) 0%, rgba(255,0,0,1) 100%)\",\n                WebkitBackgroundClip: \"text\",\n                WebkitTextFillColor: \"transparent\",\n                MozBackgroundClip: \"text\",\n                MozTextFillColor: \"transparent\",\n                backgroundClip: \"text\",\n                color: \"transparent\",\n                textAlign: \"center\",\n                fontWeight: \"bold\",\n              }}\n            >\n              Best Working Strategy\n            </Typography>\n          </Grid>\n        </Grid>\n      </div>\n    </ThemeProvider>\n  );\n};\n\nexport default Analytics;\n"],"names":["_ref","words","ref","useRef","useEffect","svg","d3","current","selectAll","remove","width","height","getBoundingClientRect","fontSizeScale","domain","d","weight","range","nodes","map","word","x","Math","random","y","radius","simulation","force","strength","on","data","join","text","style","concat","attr","stop","_jsx","Analytics","theme","createTheme","palette","background","default","primary","components","MuiPaper","styleOverrides","root","backgroundColor","ledgerDataRaw","localStorage","getItem","ledgerData","JSON","parse","profitLossArray","item","parseFloat","profit_loss","stockNamesArray","stock","stock_name","fundValue","fundValuesArray","forEach","profitLoss","push","sellDates","entry","sell_date","daysHeldArray","buyDate","Date","buy_date","lineSeriesData","totalFundValue","WordGraphData","floor","_jsxs","ThemeProvider","children","CssBaseline","Grid","container","spacing","xs","md","Box","sx","display","justifyContent","alignItems","BarChart","series","label","yAxisKey","color","xAxis","scaleType","yAxis","id","Typography","variant","WebkitBackgroundClip","WebkitTextFillColor","MozBackgroundClip","MozTextFillColor","backgroundClip","textAlign","fontWeight","LineChart","Divider","Stack","direction","value","description","startAngle","endAngle","gauge","index","Gauge","gaugeClasses","valueText","fontSize","valueArc","fill","referenceArc","disabled","WordGraph"],"sourceRoot":""}