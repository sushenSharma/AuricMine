{"version":3,"file":"static/js/244.5b68ce09.chunk.js","mappings":"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","sources":["components/SwalNotification/index.js","config/index_supabase.js","containers/Main/RiskManagement/hooks/validation-risk-management.js","containers/Main/RiskManagement/index.js","containers/Main/RiskManagement/lib/apis.js","utils/defaults.js","utils/metadata.js","hooks/use-labels.js","../node_modules/@mui/icons-material/AccountBalanceWalletOutlined.js"],"sourcesContent":["import Swal from \"sweetalert2\";\n\nconst SwalNotification = ({ title, text, btnLabel, iconType }) => {\n  return Swal.fire({\n    title,\n    text,\n    icon: iconType,\n    confirmButtonText: btnLabel,\n  });\n};\n\nexport default SwalNotification;\n","import { createClient } from \"@supabase/supabase-js\";\n\nexport const supabase = createClient(\n  process.env.REACT_APP_SUPABASE_URL,\n  process.env.REACT_APP_SUPABASE_ANON_KEY\n);\n\nexport const openAIConfig = {\n  apiKey: process.env.REACT_APP_OPENAI_API_KEY,\n  apiUrl: process.env.REACT_APP_OPENAI_URL,\n  promptText: process.env.REACT_APP_OPENAI_API_PROMPT,\n};\n\nexport const tableName = process.env.REACT_APP_SUPABASE_TABLE_NAME;\nexport const watchlistTableName =\n  process.env.REACT_APP_SUPABASE_WATCHLIST_TABLE_NAME;\nexport const stateTableName = process.env.REACT_APP_SUPABASE_STATUS_TABLE_NAME;\n","import _ from \"lodash\";\n\nexport const getSubmissionData = (formFields) => {\n  let valid = true;\n  const errors = {};\n  const fieldData = {};\n\n  for (let key in formFields) {\n    const value = formFields[key];\n\n    if (value) {\n      fieldData[setFormKeys[key]] = value;\n    } else {\n      valid = false;\n      errors[key] = \"Required!\";\n    }\n  }\n\n  return { valid, errors, fieldData };\n};\n\nexport const isError = (formError, key) => {\n  switch (key) {\n    case \"seedCapital\":\n      return !_.isEmpty(formError) && formError.seedCapital;\n    case \"initialRisk\":\n      return !_.isEmpty(formError) && formError.initialRisk;\n    case \"regularIncome\":\n      return !_.isEmpty(formError) && formError.regularIncome;\n    case \"provisioningPercentage\":\n      return !_.isEmpty(formError) && formError.provisioningPercentage;\n    default:\n      return false;\n  }\n};\n\nconst setFormKeys = {\n  seedCapital: \"SeedCapital\",\n  initialRisk: \"SeedRisk\",\n  regularIncome: \"IncomeCashflow\",\n  provisioningPercentage: \"PercentageCashflowRisk\",\n};\n","import _ from \"lodash\";\nimport React, { useEffect, useState } from \"react\";\nimport { getLabel } from \"../../../hooks/use-labels\";\nimport { getStorageStringItem } from \"../../../utils/common-utils\";\nimport { TextField, Button, Box, Typography, Grid } from \"@mui/material\";\nimport { getSubmissionData, isError } from \"./hooks/validation-risk-management\";\nimport {\n  fetchRiskManagementData,\n  saveRiskManagementData,\n  updateRiskManagementData,\n} from \"./lib/apis\";\n\nimport SwalNotification from \"../../../components/SwalNotification\";\nimport AccountBalanceWalletOutlinedIcon from \"@mui/icons-material/AccountBalanceWalletOutlined\";\n\nconst RiskManagement = () => {\n  const userID = getStorageStringItem(\"userId\");\n\n  const [finalPercentage, setFinalPercentage] = useState(null);\n  const [seedCapital, setSeedCapital] = useState(\"500000\");\n  const [initialRisk, setInitialRisk] = useState(\"5\");\n  const [regularIncome, setRegularIncome] = useState(\"\");\n  const [provisioningPercentage, setProvisioningPercentage] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [formError, serFormError] = useState({});\n  const [queryAction, setQueryAction] = useState(\"insert\");\n\n  useEffect(() => {\n    getRiskManagementData();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const getRiskManagementData = () => {\n    fetchRiskManagementData(userID).then(({ data, error }) => {\n      if (error) {\n        console.log(error);\n        return;\n      }\n\n      if (!_.isEmpty(data)) {\n        const {\n          IncomeCashflow,\n          PercentageCashflowRisk,\n          SeedCapital,\n          SeedRisk,\n        } = data[0];\n\n        localStorage.setItem(\"riskManagementData\", JSON.stringify(data[0]));\n\n        setSeedCapital(SeedCapital);\n        setInitialRisk(SeedRisk);\n        setRegularIncome(IncomeCashflow);\n        setProvisioningPercentage(PercentageCashflowRisk);\n\n        setQueryAction(\"update\");\n      }\n    });\n  };\n\n  const fetchData = async () => {\n    setLoading(true);\n    setError(null);\n    try {\n      const ledgerDataRaw = localStorage.getItem(\"ledgerData\");\n      const ledgerData = JSON.parse(JSON.parse(ledgerDataRaw));\n\n      // Sort the ledger data by Sell Date using Lodash\n      const sortedLedgerData = _.sortBy(\n        ledgerData,\n        (item) => new Date(item.sell_date)\n      );\n      console.log(sortedLedgerData);\n\n      // Extract the profit and loss values from sorted ledger data\n      const profitLossArray = sortedLedgerData.map((item) =>\n        parseFloat(item.profit_loss)\n      );\n      const initialCapital = parseFloat(seedCapital);\n      const initialRiskPercentage = parseFloat(initialRisk) / 100;\n      const profitMultiplier = 1.5;\n      const requestBody = {\n        initialCapital,\n        initialRiskPercentage,\n        tradeOutcomes: profitLossArray,\n        profitMultiplier,\n      };\n\n      const response = await fetch(\n        \"https://zcvtgtaimnsrlemslypr.supabase.co/functions/v1/hello-world\",\n        {\n          method: \"POST\",\n          headers: { \"Content-Type\": \"application/json\" },\n          body: JSON.stringify(requestBody),\n        }\n      );\n\n      if (!response.ok) throw new Error(\"Network response was not ok\");\n      const result = await response.json();\n      setFinalPercentage(result.finalRiskPercentage);\n    } catch (error) {\n      setError(error.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const onChangeHandler = (value, key) => {\n    switch (key) {\n      case \"seedCapital\":\n        setSeedCapital(value);\n        deleteError(formError, key);\n        break;\n      case \"initialRisk\":\n        setInitialRisk(value);\n        deleteError(formError, key);\n        break;\n      case \"regularIncome\":\n        setRegularIncome(value);\n        deleteError(formError, key);\n        break;\n      case \"provisioningPercentage\":\n        setProvisioningPercentage(value);\n        deleteError(formError, key);\n        break;\n      default:\n        return null;\n    }\n  };\n\n  const deleteError = (formError, key) => {\n    delete formError[key];\n  };\n\n  const onFinishHandler = async () => {\n    const { valid, errors, fieldData } = getSubmissionData({\n      seedCapital,\n      initialRisk,\n      regularIncome,\n      provisioningPercentage,\n    });\n\n    if (valid) {\n      onSubmit(fieldData);\n    } else {\n      serFormError(errors);\n    }\n  };\n\n  const onSubmit = (fieldData) => {\n    const requestBody = {\n      Userid: userID,\n      ...fieldData,\n    };\n\n    if (queryAction === \"insert\") {\n      insertData(requestBody);\n    } else if (queryAction === \"update\") {\n      updateData(requestBody, userID);\n    }\n  };\n\n  const insertData = (requestBody) => {\n    saveRiskManagementData(requestBody).then(({ data, error }) => {\n      if (error) {\n        console.log(error);\n        return;\n      }\n\n      getRiskManagementData();\n      successPopup();\n    });\n  };\n\n  const updateData = (requestBody, userId) => {\n    updateRiskManagementData(userId, requestBody).then(({ data, error }) => {\n      if (error) {\n        console.log(error);\n        return;\n      }\n      getRiskManagementData();\n      successPopup();\n    });\n  };\n\n  const successPopup = () => {\n    SwalNotification({\n      title: getLabel(\"successLabel\"),\n      text: getLabel(\"saveDataContent\"),\n      iconType: \"success\",\n      btnLabel: getLabel(\"okLabel\"),\n    });\n  };\n\n  return (\n    <div>\n      <Box\n        sx={{\n          maxWidth: \"auto\",\n          margin: \"left\",\n          padding: 2,\n          background: \"#fff\",\n        }}\n      >\n        <Grid container spacing={2}>\n          <Grid item xs={12} md={4}>\n            <Typography\n              variant=\"h4\"\n              sx={{ textAlign: \"center\", marginBottom: 2 }}\n            >\n              Risk Management Settings\n            </Typography>\n            <TextField\n              error={isError(formError, \"seedCapital\")}\n              label=\"Seed Capital\"\n              variant=\"outlined\"\n              fullWidth\n              value={seedCapital}\n              onChange={(e) => onChangeHandler(e.target.value, \"seedCapital\")}\n              margin=\"normal\"\n              helperText={\n                !_.isEmpty(formError) && formError.seedCapital\n                  ? formError.seedCapital\n                  : \"\"\n              }\n            />\n            <TextField\n              error={isError(formError, \"initialRisk\")}\n              label=\"Initial Risk (%)\"\n              variant=\"outlined\"\n              fullWidth\n              value={initialRisk}\n              onChange={(e) => onChangeHandler(e.target.value, \"initialRisk\")}\n              margin=\"normal\"\n              type=\"number\"\n              helperText={\n                !_.isEmpty(formError) && formError.initialRisk\n                  ? formError.initialRisk\n                  : \"\"\n              }\n            />\n            <TextField\n              error={isError(formError, \"regularIncome\")}\n              label=\"Regular Income\"\n              variant=\"outlined\"\n              fullWidth\n              value={regularIncome}\n              onChange={(e) => onChangeHandler(e.target.value, \"regularIncome\")}\n              margin=\"normal\"\n              helperText={\n                !_.isEmpty(formError) && formError.regularIncome\n                  ? formError.regularIncome\n                  : \"Enter your regular income from cashflow\"\n              }\n            />\n            <TextField\n              error={isError(formError, \"provisioningPercentage\")}\n              label=\"Provisioning Percentage\"\n              variant=\"outlined\"\n              fullWidth\n              value={provisioningPercentage}\n              onChange={(e) =>\n                onChangeHandler(e.target.value, \"provisioningPercentage\")\n              }\n              margin=\"normal\"\n              type=\"number\"\n              helperText={\n                !_.isEmpty(formError) && formError.provisioningPercentage\n                  ? formError.provisioningPercentage\n                  : \"Percentage of income okay for provisioning loss in trades\"\n              }\n            />\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              onClick={onFinishHandler}\n              fullWidth\n              sx={{ marginY: 2 }}\n            >\n              Save Changes\n            </Button>\n          </Grid>\n          <Grid\n            item\n            xs={12}\n            md={6}\n            sx={{\n              display: \"flex\",\n              flexDirection: \"column\",\n              alignItems: \"center\",\n              justifyContent: \"center\",\n              paddingY: 10,\n            }}\n          >\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              onClick={fetchData}\n              disabled={loading || !seedCapital || !initialRisk}\n              startIcon={<AccountBalanceWalletOutlinedIcon />}\n              sx={{ marginY: 5, borderRadius: 0 }}\n              size=\"large\"\n            >\n              {loading\n                ? \"Calculating...\"\n                : \"Calculate Stop Loss for My Next Trade\"}\n            </Button>\n            {error && <Typography color=\"error\">Error: {error}</Typography>}\n            {finalPercentage !== null && (\n              <Typography variant=\"h5\" sx={{ mt: 2, textAlign: \"center\" }}>\n                Based on your past performance, It is recommended to put a stop\n                loss of{\" \"}\n                <span\n                  style={{\n                    color: \"#d32f2f\",\n                    fontStyle: \"normal\",\n                    fontWeight: \"bolder\",\n                    fontSize: \"30px\",\n                  }}\n                >\n                  {finalPercentage}%\n                </span>{\" \"}\n                for your next trade.\n              </Typography>\n            )}\n          </Grid>\n        </Grid>\n      </Box>\n    </div>\n  );\n};\n\nexport default RiskManagement;\n","import { supabase } from \"../../../../config/index_supabase\";\n\nexport const saveRiskManagementData = async (formData) => {\n  return await supabase.from(\"Risk_Management\").insert(formData);\n};\n\nexport const fetchRiskManagementData = async (userId) => {\n  return await supabase.from(\"Risk_Management\").select().eq(\"Userid\", userId);\n};\n\nexport const updateRiskManagementData = async (userId, updateData) => {\n  return await supabase\n    .from(\"Risk_Management\")\n    .update(updateData)\n    .match({ Userid: userId });\n};\n","export const defaults = {\n  brandName: \"TradingJournal.ai\",\n\n  welcomeLabel: \"Welcome:\",\n  signOutLabel: \"Sign out\",\n\n  downloadCSVLabel: \"Download CSV\",\n  saveChangesLabel: \"Save Changes\",\n  getInsightsLabel: \"Get Insights with AI\",\n  insertNewRowLabel: \"INSERT NEW ROW\",\n\n  successLabel: \"Success!\",\n  deleteDateContent: \"Data deleted successfully!\",\n  okLabel: \"OK\",\n  saveDataContent: \"Data saved successfully!\",\n  areYouSureLabel: \"Are you sure?\",\n  cannotRevertLabel: \"You won't be able to revert this!\",\n  deleteLabel: \"Yes, delete it!\",\n\n  homeLabel: \"Home\",\n  riskManagementLabel: \"Risk Management\",\n  watchListLabel: \"Simulator\",\n  analyticsLabel: \"Analytics\",\n  blogsLabel: \"Kanban Board\",\n\n  /** Header Navigation */\n  homeNavLinkLabel: \"Home\",\n  aboutUsNavLinkLabel: \"About Us\",\n  servicesNavLinkLabel: \"Services\",\n\n  /** About Us */\n  aboutUsFirstContent:\n    'Mr. Harneet Singh Kharbanda is associated with TradingJournal.ai as an Advisor and is a full-time trader in the stock market with a strong social media following of more than 200,000 people who value his expertise. Harneet is a firm believer in the importance of maintaining a trading journal and advocates strongly for good trading psychology. His best-selling book, \"Trade Like a Monk,\" emphasizes the psychological aspects of trading. Known for his straightforward approach, Harneet is a sought-after speaker and has delivered impactful talks at prestigious institutions like IIIT UNA and Masters Union. He is passionate about simplifying the complexities of trading and investment, often emphasizing the importance of discipline. Through his educational efforts, Harneet\\'s mission is to make the stock market accessible to everyone, showing that with the right tools and mindset, anyone can achieve significant success in trading.',\n\n  aboutUsSecondContent:\n    \"Shushen Sharma, the Founder of TradingJournal.ai, is a seasoned trader with a decade of experience and a skilled software developer. He has won the 60-day challenge by the renowned broker Zerodha twice, showcasing his expertise in the trading domain. However, this challenge has been discontinued due to regulatory constraints. As a staunch advocate for risk management, Shushen deeply understands the essential factors necessary to scale the business of stock trading. Through TradingJournal.ai, he is committed to creating tools that enhance journaling practices and empower retail traders to implement a robust risk management framework effectively. Shushen believes in treating trading as a serious business—a structured discipline requiring thorough analysis and reflection. His goal with TradingJournal.ai is to transform retail traders into well-informed, strategic market participants by promoting a disciplined and systematic approach to trading. By combining his extensive market knowledge with his programming skills, Shushen guides traders toward higher performance and success in the competitive world of stock trading.\",\n\n  /**\n   * Pricing\n   */\n  pricingAndPlanTitle: \"Pricing & Plans\",\n  pricingAndPlanDescription:\n    \"Transparent pricing that scales with your trading business\",\n  packageTypeOne: \"Free Forever Plan (Starter)\",\n  packageTypeOneLiner: \"Your journey to disciplined trading begins here.\",\n  packageTypeOnePrice: \"₹0\",\n  packageTypeOneDuration: \"month\",\n  packageTypeOnePaymentDuration: \"No credit card required\",\n  packageTypeOneLinkLabel: \"Try it for free\",\n  packageTypeOnePlanOffers: \"What's included:\",\n  packageTypeOnePlanList: [\n    \"Access to basic analytics and charts\",\n    \"Limited historical data access (e.g., 30 days)\",\n    \"Basic performance insights (e.g., Win/Loss ratio)\",\n    \"1-day log retention\",\n    \"Community support\",\n  ],\n\n  packageTypeTwo: \"Pro Trader Plan\",\n  packageTypeTwoLiner: \"Take your trading to the next level.\",\n  packageTypeTwoPrice: \"₹19\",\n  packageTypeTwoDuration: \"month\",\n  packageTypeTwoPaymentDuration: \"Billed monthly\",\n  packageTypeTwoLinkLabel: \"Get Started\",\n  packageTypeTwoPlanOffers: \"Everything in Free, plus:\",\n  packageTypeTwoPlanList: [\n    \"Unlimited portfolios and trades\",\n    \"Risk management tools and dynamic stop-loss calculator\",\n    \"AI-driven trade suggestions or journaling prompts\",\n    \"Access to pre-built templates for journaling\",\n    \"Onboarding Support\",\n  ],\n\n  packageTypeThree: \"Professional Traders\",\n  packageTypeThreeLiner: \"For teams that are scaling up\",\n  packageTypeThreePrice: \"₹159\",\n  packageTypeThreeDuration: \"month\",\n  packageTypeThreePaymentDuration: \"Billed monthly\",\n  packageTypeThreeLinkLabel: \"Contact Sales\",\n  packageTypeThreePlanOffers: \"Everything in Ridiculous, plus:\",\n  packageTypeThreePlanList: [\n    \"Unlimited Unified API calls\",\n    \"Unlimited Premium integrations\",\n    \"White labeling\",\n    \"Volume API pricing\",\n    \"30-day log retention\",\n    \"Roadmap request priority\",\n    \"Dedicated account manager\",\n  ],\n\n  compareAndPlanFeatures: \"Compare plans and features\",\n  chosePlanFeatureDescription: \"Choose the plan that's right for your business\",\n  faqLabel: \"FAQs\",\n\n  tryItFreeLabel: \"Try It Free\",\n  getStartedLabel: \"Get Started\",\n  contactSalesLabel: \"Contact Sales\",\n\n  /** Payment Gateway ***/\n\n  paymentGatewayLabel: \"PhonePe Payment Gateway\",\n  payWithLabel: \"Pay with PhonePe\",\n  congratulationsLabel: \"Congratulations\",\n  successContent: \"You have subscribed for AI feature\",\n\n  /**Kanban Board Page */\n  AddNewStockToWatchListLabel: \"ADD NEW STOCK \",\n};\n","let metadata;\n\nconst getMetaLabels = (metadata) => {\n  return metadata.filter(({ type }) => type === \"LABEL\");\n};\n\nconst getMetaStyles = (metadata) => {\n  return metadata.filter(({ type }) => type === \"STYLE\");\n};\n\nexport const setMetadata = (_metadata) => {\n  metadata = {};\n  const label = getMetaLabels(_metadata);\n  const style = getMetaStyles(_metadata);\n\n  metadata = {\n    ...(label.length && { label }),\n    ...(style.length && { style }),\n  };\n\n  localStorage.setItem(\"metadata\", JSON.stringify(metadata));\n};\n\nconst getMetadata = () => {\n  if (!metadata) {\n    metadata = JSON.parse(localStorage.getItem(\"metadata\") || \"{}\");\n  }\n  return metadata;\n};\n\nexport const styles = () => {\n  return getMetadata()?.style || [];\n};\n\nexport const labels = () => {\n  return getMetadata()?.label || [];\n};\n","import { getParameter } from \"../utils/common-utils\";\nimport { defaults } from \"../utils/defaults\";\nimport { labels } from \"../utils/metadata\";\n\nexport const getLabels = (keys) => {\n  const labelsData = {};\n  const labelInformations = labels();\n\n  keys.forEach((key) => {\n    let labelInfo = getParameter(labelInformations, key);\n\n    let data = labelInfo\n      ? labelInfo.values.length === 1\n        ? labelInfo.values[0]\n        : labelInfo.values\n      : defaults[key];\n\n    labelsData[key] = data;\n  });\n\n  return labelsData;\n};\n\nexport const useLabels = (keys) => {\n  return getLabels(keys);\n};\n\nexport const getLabel = (key) => {\n  const labelData = labels();\n  const labelInfo = getParameter(labelData, key);\n\n  return labelInfo\n    ? labelInfo.values.length === 1\n      ? labelInfo.values[0]\n      : labelInfo.values\n    : defaults[key];\n};\n","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = exports.default = (0, _createSvgIcon.default)([/*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M21 7.28V5c0-1.1-.9-2-2-2H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2v-2.28c.59-.35 1-.98 1-1.72V9c0-.74-.41-1.37-1-1.72M20 9v6h-7V9zM5 19V5h14v2h-6c-1.1 0-2 .9-2 2v6c0 1.1.9 2 2 2h6v2z\"\n}, \"0\"), /*#__PURE__*/(0, _jsxRuntime.jsx)(\"circle\", {\n  cx: \"16\",\n  cy: \"12\",\n  r: \"1.5\"\n}, \"1\")], 'AccountBalanceWalletOutlined');"],"names":["_ref","title","text","btnLabel","iconType","Swal","icon","confirmButtonText","supabase","createClient","process","openAIConfig","apiKey","apiUrl","promptText","tableName","watchlistTableName","isError","formError","key","_","seedCapital","initialRisk","regularIncome","provisioningPercentage","setFormKeys","RiskManagement","userID","getStorageStringItem","finalPercentage","setFinalPercentage","useState","setSeedCapital","setInitialRisk","setRegularIncome","setProvisioningPercentage","loading","setLoading","error","setError","serFormError","queryAction","setQueryAction","useEffect","getRiskManagementData","async","from","select","eq","userId","fetchRiskManagementData","then","data","console","log","IncomeCashflow","PercentageCashflowRisk","SeedCapital","SeedRisk","localStorage","setItem","JSON","stringify","onChangeHandler","value","deleteError","onSubmit","fieldData","requestBody","Userid","insertData","updateData","insert","formData","saveRiskManagementData","_ref2","successPopup","update","match","updateRiskManagementData","_ref3","SwalNotification","getLabel","_jsx","children","Box","sx","maxWidth","margin","padding","background","_jsxs","Grid","container","spacing","item","xs","md","Typography","variant","textAlign","marginBottom","TextField","label","fullWidth","onChange","e","target","helperText","type","Button","color","onClick","valid","errors","formFields","getSubmissionData","marginY","display","flexDirection","alignItems","justifyContent","paddingY","ledgerDataRaw","getItem","ledgerData","parse","sortedLedgerData","Date","sell_date","profitLossArray","map","parseFloat","profit_loss","initialCapital","initialRiskPercentage","tradeOutcomes","profitMultiplier","response","fetch","method","headers","body","ok","Error","result","json","finalRiskPercentage","message","disabled","startIcon","AccountBalanceWalletOutlinedIcon","borderRadius","size","mt","style","fontStyle","fontWeight","fontSize","defaults","brandName","welcomeLabel","signOutLabel","downloadCSVLabel","saveChangesLabel","getInsightsLabel","insertNewRowLabel","successLabel","deleteDateContent","okLabel","saveDataContent","areYouSureLabel","cannotRevertLabel","deleteLabel","homeLabel","riskManagementLabel","watchListLabel","analyticsLabel","blogsLabel","homeNavLinkLabel","aboutUsNavLinkLabel","servicesNavLinkLabel","aboutUsFirstContent","aboutUsSecondContent","pricingAndPlanTitle","pricingAndPlanDescription","packageTypeOne","packageTypeOneLiner","packageTypeOnePrice","packageTypeOneDuration","packageTypeOnePaymentDuration","packageTypeOneLinkLabel","packageTypeOnePlanOffers","packageTypeOnePlanList","packageTypeTwo","packageTypeTwoLiner","packageTypeTwoPrice","packageTypeTwoDuration","packageTypeTwoPaymentDuration","packageTypeTwoLinkLabel","packageTypeTwoPlanOffers","packageTypeTwoPlanList","packageTypeThree","packageTypeThreeLiner","packageTypeThreePrice","packageTypeThreeDuration","packageTypeThreePaymentDuration","packageTypeThreeLinkLabel","packageTypeThreePlanOffers","packageTypeThreePlanList","compareAndPlanFeatures","chosePlanFeatureDescription","faqLabel","tryItFreeLabel","getStartedLabel","contactSalesLabel","paymentGatewayLabel","payWithLabel","congratulationsLabel","successContent","AddNewStockToWatchListLabel","metadata","getMetadata","labels","_getMetadata2","useLabels","keys","labelsData","labelInformations","forEach","labelInfo","getParameter","values","length","getLabels","labelData","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","default","jsx","d","cx","cy","r"],"sourceRoot":""}